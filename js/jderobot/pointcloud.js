// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `pointcloud.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(global, r)
{
    var require = typeof(r) === "function" ? r : function(){};
    require("Ice/Object");
    require("Ice/ObjectPrx");
    require("Ice/Operation");
    require("Ice/Struct");
    require("Ice/Long");
    require("Ice/HashMap");
    require("Ice/HashUtil");
    require("Ice/ArrayUtil");
    require("Ice/StreamHelpers");
    
    var Ice = global.Ice || {};
    var jderobot = global.jderobot ||  {};

    /**
     * PCL
     **/
    jderobot.RGBPoint = Slice.defineStruct(
        function(x, y, z, r, g, b, id)
        {
            this.x = x !== undefined ? x : 0.0;
            this.y = y !== undefined ? y : 0.0;
            this.z = z !== undefined ? z : 0.0;
            this.r = r !== undefined ? r : 0.0;
            this.g = g !== undefined ? g : 0.0;
            this.b = b !== undefined ? b : 0.0;
            this.id = id !== undefined ? id : 0;
        },
        false,
        function(__os)
        {
            __os.writeFloat(this.x);
            __os.writeFloat(this.y);
            __os.writeFloat(this.z);
            __os.writeFloat(this.r);
            __os.writeFloat(this.g);
            __os.writeFloat(this.b);
            __os.writeInt(this.id);
        },
        function(__is)
        {
            this.x = __is.readFloat();
            this.y = __is.readFloat();
            this.z = __is.readFloat();
            this.r = __is.readFloat();
            this.g = __is.readFloat();
            this.b = __is.readFloat();
            this.id = __is.readInt();
        },
        28, 
        true);
    Slice.defineSequence(jderobot, "RGBPointsPCLHelper", "jderobot.RGBPoint", true);

    jderobot.pointCloudData = Slice.defineObject(
        function(p)
        {
            Ice.Object.call(this);
            this.p = p !== undefined ? p : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::pointCloudData"
        ],
        -1,
        function(__os)
        {
            jderobot.RGBPointsPCLHelper.write(__os, this.p);
        },
        function(__is)
        {
            this.p = jderobot.RGBPointsPCLHelper.read(__is);
        },
        false);

    jderobot.pointCloudDataPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.pointCloudData.ice_staticId, undefined);

    Slice.defineOperations(jderobot.pointCloudData, jderobot.pointCloudDataPrx);

    jderobot.pointCloud = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::pointCloud"
        ],
        -1, undefined, undefined, false);

    jderobot.pointCloudPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.pointCloud.ice_staticId, undefined);

    Slice.defineOperations(jderobot.pointCloud, jderobot.pointCloudPrx,
    {
        "getCloudData": [, 2, 2, , , ["jderobot.pointCloudData", true], , , , , true]
    });
    global.jderobot = jderobot;
}
(typeof (global) === "undefined" ? window : global, typeof (require) === "undefined" ? undefined : require));
